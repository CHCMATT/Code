{"name":"Code","tagline":"Code - Python IRC Bot","body":"Code the flexible Python IRC Bot\r\n================================\r\n\r\nBuild State: [![Build Status](https://travis-ci.org/Liamraystanley/Code.png?branch=master)](https://travis-ci.org/Liamraystanley/Code)\r\n\r\nCode (on #L @ irc.esper.net) is a open source python IRC bot forked from Phenny/Jenni, with new modules, easier to understand commands, and easy installation! Code can run on any operating system that supports Python 2.4 or higher.\r\n\r\nFeatures\r\n-------- \r\n________\r\n\r\nCode is packed full of features ranging from raw IRC functions to modules that can be unloaded and loaded with ease. Some features include:\r\n\r\nFast & Light Weight\r\n- Code is very small, so it won't take up resources. Also, Code is very responsive and quick-paced! Also he can run in 1-2 processes!\r\n\r\nLoad & Unload Modules\r\n- Code has the ability to load user defined IRC modules, that are pre-made or ones that you create. Code also can live-reload modules for active and fast development.\r\n\r\nVery User Friendly\r\n- It is very easy to install and run Code, even if you have no knowledge of ever running a IRC bot before. \".help\" commands, and friendly responses help everything feel smooth and elegant.\r\n\r\nEasy-To-use API\r\n- When creating your own modules, it is always very easy to have a fully documented API and easy to understand functions.\r\n\r\nOpen-Source\r\n- Found a bug, feature, or technical support/advice? You can always navigate to the [Github](https://github.com/Liamraystanley/Code) page to make requests and post bugs. Heck, even fork Code as your own and make your own modifications!</dd>\r\n\r\nConfiguration\r\n- By default, Code has the ability to change his username (including NickServ Authentication), server (including server password), and excluded channel/modules.\r\n\r\nInstallation - How do I install? \r\n================================\r\n________________________________\r\n\r\n > for rss.py to work (only usable on linux), install feedparser via your pip/yum/other package installer.\r\n\r\n**If you have any issues during the install, feel free to head to http://chat.liamstanley.net/ to get help**\r\n\r\n\r\nUnix & Unix-like OS: \r\n--------------------\r\n\r\n    1) Make sure you have Python installed `http://www.python.org/download/releases/2.7.5/`\r\n       - (packaged in lots of *nix distros)\r\n    2) Run `git clone https://github.com/Liamraystanley/Code.git`\r\n       - if you do not have git installed, simply install it via your package manager.\r\n         e.i, `sudo apt-get install git`\r\n    3) Run `./code`- this creates a default config file \r\n    4) Edit ~/.code/default.py \r\n    5) Run `./code` - this now runs code with your settings \r\n\r\nFull command would be: \r\n\r\n    python ./code\r\n    home/code/lib/python272 ./code\r\n    \r\n(full path purposes) \r\n\r\nIf you wish to run Code on a UNIX shell, the best thing to do would be to fork it to the background process usign nohup, you do this by execution python/Code with: \r\n\r\n    nohup python ./code &\r\n\r\nThe `nohup` and `&` play a crucial part in forking itself to the background. If this method 'still' doesn't work, you need to try these commands. (you need to use the method above, THEN cancel out of the current process (I use CTRL+C on windows keyboards)) \r\n\r\n    bg\r\n    disown -h\r\n\r\nAnother method of forking it into the background, is by using the well-known linux program called screen.\r\n\r\n    screen python ./code\r\n\r\nThis creates a terminal window that can be logged into and out without disturbing the process in that window. to exit the screen safely, hit `CTRL+A` then `CTRL+D`.\r\nTo log back into, and view the playback of Code, type `screen -r`.\r\n\r\n\r\nWindows: \r\n--------------------\r\n\r\n\r\n    1) Make sure you have Python installed `http://www.python.org/download/releases/2.7.5/`\r\n    2) Download Code here: `https://github.com/Liamraystanley/Code/zipball/master` and unzip it.\r\n    3) Configure Code's default.py file, located in your user directory.\r\n       - This is often, `C:\\\\users\\(your username)\\.code\\default.py`.\r\n       - Note, notepad is not prefered. If anything, use Notepad++ under windows.\r\n    3) Now, you should be able to use run.exe (if it's in Code's directory.\r\n       - Else, you can open up command prompt, `cd` to Codes directory, and execute Code with `python code`.\r\n       - Note, if command prompt says that `python` is not a internal or external program,\r\n         that means Python failed to be added to your system-wide %PATH% file.\r\n         So, you need to add it to the %PATH% variable.\r\n         Feel free to google that one, Code is not noob-friendly.\r\n\r\n\r\nConfiguration & Personalization \r\n===============================\r\n_______________________________\r\n\r\nWarning! Once you install Code using the method above, you need to configure him to point to the server you wish to connect him to, as well as add a module path, and administrators/owners.\r\n\r\nUnix & Unix-like OS: \r\n--------------------\r\n\r\nEdit the file located at `../.code/default.py`. this is either the previous directory, or your $HOME directory `/home/(user)`.\r\n\r\nWindows\r\n-------\r\n\r\nEdit the file located in your Documents folder, which should be located at: \r\n`C:\\\\users\\myusername\\.code\\default.py` (for Windows Vista/7/8)\r\n`default.py` might be located in the same spot as the UNIX location listed above.\r\nYou should see a file like this:\r\n\r\n```python\r\n# Code Copyright (C) 2012-2013 Liam Stanley\r\n# Uncomment things you wish to add to the file\r\n# lines with \"#\" in front of them are comments\r\n\r\n# irc bot nickname\r\nnick = 'code'\r\n\r\n# irc server host\r\nhost = 'irc.example.net'\r\n\r\n# port to use to connect\r\nport = 6667\r\n\r\n# channels to auto-join\r\nchannels = ['#example', '#test']\r\n\r\n# prefix for Codes commands, nothing complex. e.g one of these:\r\n# . : ; \" ' , < > - _ + = ! $ ^ *\r\nprefix = '.'\r\n\r\n# channels to greet users on channel join\r\n# e.g \"Hello Code, welcome to #Lounge!\"\r\n# uncomment to enable (remember this wont work with ai.py disabled.)\r\n#greetchans = ['#Example', '#Hugs']\r\n# exclude users from receiving a welcome message below.\r\n#excludeusers = ['Serious', 'User']\r\n\r\n# your nickname for use in admin functions\r\n# You can also specify nick@hostmask\r\n# For example: code@unaffiliated/code\r\nowner = 'yournickname'\r\n\r\n# website to show for help documentation\r\n#website = 'http://code.liamstanley.net'\r\n\r\n# password is the Nickserv password, serverpass is the server password\r\n#password = 'example'\r\n#serverpass = 'serverpass'\r\n\r\n# would you like color/bolc/italic coded commands? this enables/disables\r\n# code.color/bold/italic() or any other form of carot notation applied directly by code\r\n# although, if your module uses raw carot notation, then it won't disable that\r\ntextstyles = True\r\n\r\n# These are people who will be able to use admin.py's functions...\r\nadmins = [owner, 'someoneyoutrust']\r\n# But admin.py is disabled by default, as follows:\r\nexclude = ['admin', 'twss']\r\n\r\n# If you want to enumerate a list of modules rather than disabling\r\n# some, use \"enable = ['example']\", which takes precedent over exclude\r\n#enable = []\r\n\r\n# Block modules from specific channels\r\n# To not block anything for a channel, just don't mention it\r\nexcludes = {\r\n   '##blacklist': ['!'],\r\n}\r\n\r\n# This allows one to allow specific people to use \".msg channel message here\"\r\n# in specific channels.\r\nhelpers = {\r\n   '#channel1': ['a.somedomain.tld', 'b.anotherdomain.tld'],\r\n   '##channel2': ['some/other/hostmask'],\r\n}\r\n    \r\n# Channel code will report all private messages sent to him to.\r\n# This includes server notices.\r\n#logchan_pm = '#code-log'\r\n\r\n# Enable raw logging of everything code sees.\r\n# logged to the folder 'log'\r\nlogging = False\r\n\r\n# Directories to load user modules from\r\n# e.g. /path/to/my/modules\r\nextra = ['']\r\n\r\n# Services to load: maps channel names to white or black lists\r\nexternal = {\r\n   '#liberal': ['!'], # allow all\r\n   '#conservative': [], # allow none\r\n   '*': ['!'] # default whitelist, allow all\r\n}\r\n\r\n# EOF\r\n```\r\n\r\nyou should uncomment, and replace the necessary items (like serverpass & nickservpass) to run your bot. \r\n\r\nCustomize Even More: \r\n====================\r\n____________________\r\n\r\nChanging Prefix: \r\n(this would be in the config, i just haven't gotten around to it yet. sorry!)\r\n\r\nIf you wish to change the command prefix from \".\" to another item Edit /code/code and find this:\r\n**NOTE: THIS WILL NOT CHANGE LOTS OF EXAMPLES, OR CERTAIN REGEX CHECKS. BEWARE.**\r\n\r\n```python\r\n    if not hasattr(module, 'prefix'):\r\n        module.prefix = r'\\.'\r\n```\r\n\r\nAnd change it to: \r\n\r\n```python\r\n    if not hasattr(module, 'prefix'):\r\n        module.prefix = r'\\(CustomPrefix)'\r\n```\r\n\r\nLicensing\r\n---------\r\n_________\r\n\r\nCode Copyright (C) 2012-2013 Liam Stanley (More info here: http://code.liamstanley.net/#license)\r\n\r\n    This program is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nThe original license from Jenni and Phenny\r\n\r\n       Eiffel Forum License, version 2\r\n    \r\n    1. Permission is hereby granted to use, copy, modify and/or\r\n       distribute this package, provided that:\r\n          * copyright notices are retained unchanged,\r\n          * any distribution of this package, whether modified or not,\r\n            includes this license text.\r\n    2. Permission is hereby also granted to distribute binary programs\r\n       which depend on this package. If the binary program depends on a\r\n       modified version of this package, you are encouraged to publicly\r\n       release the modified version of this package.\r\n    \r\n    THIS PACKAGE IS PROVIDED \"AS IS\" AND WITHOUT WARRANTY. ANY EXPRESS OR\r\n    IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n    WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n    DISCLAIMED. IN NO EVENT SHALL THE AUTHORS BE LIABLE TO ANY PARTY FOR ANY\r\n    DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n    DAMAGES ARISING IN ANY WAY OUT OF THE USE OF THIS PACKAGE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}